data = [1,2;3,7;8,5;1,3];

% choose inital cluster centers
c1 = data(1,:);
c2 = data(2,:);

si = size(data);
iter = si(1,1);
xsum1 = 0;ysum1 = 0;
xsum2 = 0;ysum2 = 0;

co1 = 0;
co2 = 0;


% here you can add something of the kind while(deltax 1= 0 and deltay != 0)
% keep looping
zero = zeros(1,2);

    for i =1:iter
        %calculating the distance between centroids and data points
        pos1 = data(i,:) - c1;
        d1 = sqrt((pos1(1,1))^2 + (pos1(1,2))^2);
        pos2 = data(i,:) - c2;
        d2 = sqrt((pos2(1,1))^2+ (pos2(1,2))^2);
        %comparing the distances between the 2 centroids
        if d1>d2
            %adding this data point in the sum 
            %of the elements of this cluster
             xsum1 = xsum1 + pos1(1,1);
             ysum1 = ysum1 + pos1(1,2);
             co1 = co1 + 1;
        else
            xsum2 = xsum2 + pos2(1,1);
            ysum2 = ysum2 + pos2(1,2);
            co2 = co2 + 1;
        end
    end




%Defining new centroids
?*newc1 = [xsum1/co1, ysum1/co1];
newc2 = [xsum2/co2, ysum2/co2];

disp(newc1)
disp(newc2)
deltac1 = newc1 - c1;
deltac2 = newc2 - c2;

disp(deltac1)
disp(deltac2)


% 1) assign each row to a cluster (closest)
% ex sum(abs(data(3,:)-c2))
% 2) re calculate cluster centers c1 and c2 (average of all rows assigned
% to that cluster)

% start with one loop and print results (cluster ave and row associations)
% 2 loops ....